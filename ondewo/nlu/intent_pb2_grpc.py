# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from ondewo.nlu import intent_pb2 as ondewo_dot_nlu_dot_intent__pb2


class IntentsStub(object):
    """An intent represents a mapping between input from a user and an action to
    be taken by your application. When you pass user input to the
    [DetectIntent][google.cloud.dialogflow.v2.Sessions.DetectIntent] (or
    [StreamingDetectIntent][google.cloud.dialogflow.v2.Sessions.StreamingDetectIntent]) method, the
    Dialogflow API analyzes the input and searches
    for a matching intent. If no match is found, the Dialogflow API returns a
    fallback intent (`is_fallback` = true).

    You can provide additional information for the Dialogflow API to use to
    match user input to an intent by adding the following to your intent.

    *   **Contexts** - provide additional context for intent analysis. For
    example, if an intent is related to an object in your application that
    plays music, you can provide a context to determine when to match the
    intent if the user input is “turn it off”.  You can include a context
    that matches the intent when there is previous user input of
    "play music", and not when there is previous user input of
    "turn on the light".

    *   **Events** - allow for matching an intent by using an event name
    instead of user input. Your application can provide an event name and
    related parameters to the Dialogflow API to match an intent. For
    example, when your application starts, you can send a welcome event
    with a user name parameter to the Dialogflow API to match an intent with
    a personalized welcome message for the user.

    *   **Training phrases** - provide examples of user input to train the
    Dialogflow API agent to better match intents.

    For more information about intents, see the
    [Dialogflow documentation](https://dialogflow.com/docs/intents).
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListIntents = channel.unary_unary(
                '/ondewo.nlu.Intents/ListIntents',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.ListIntentsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.ListIntentsResponse.FromString,
                )
        self.GetIntent = channel.unary_unary(
                '/ondewo.nlu.Intents/GetIntent',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.GetIntentRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.Intent.FromString,
                )
        self.CreateIntent = channel.unary_unary(
                '/ondewo.nlu.Intents/CreateIntent',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.CreateIntentRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.Intent.FromString,
                )
        self.UpdateIntent = channel.unary_unary(
                '/ondewo.nlu.Intents/UpdateIntent',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.UpdateIntentRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.Intent.FromString,
                )
        self.DeleteIntent = channel.unary_unary(
                '/ondewo.nlu.Intents/DeleteIntent',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.DeleteIntentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.BatchUpdateIntents = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchUpdateIntents',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchUpdateIntentsRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                )
        self.BatchDeleteIntents = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchDeleteIntents',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteIntentsRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                )
        self.BatchCreateTrainingPhrases = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchCreateTrainingPhrases',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchCreateTrainingPhrasesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.FromString,
                )
        self.BatchGetTrainingPhrases = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchGetTrainingPhrases',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchGetTrainingPhrasesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.FromString,
                )
        self.BatchUpdateTrainingPhrases = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchUpdateTrainingPhrases',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchUpdateTrainingPhrasesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.FromString,
                )
        self.BatchDeleteTrainingPhrases = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchDeleteTrainingPhrases',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteTrainingPhrasesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteTrainingPhrasesResponse.FromString,
                )
        self.ListTrainingPhrases = channel.unary_unary(
                '/ondewo.nlu.Intents/ListTrainingPhrases',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.ListTrainingPhrasesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.ListTrainingPhrasesResponse.FromString,
                )
        self.BatchCreateResponses = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchCreateResponses',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchCreateResponsesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.FromString,
                )
        self.BatchGetResponses = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchGetResponses',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchGetResponsesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.FromString,
                )
        self.BatchUpdateResponses = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchUpdateResponses',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchUpdateResponsesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.FromString,
                )
        self.BatchDeleteResponses = channel.unary_unary(
                '/ondewo.nlu.Intents/BatchDeleteResponses',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteResponsesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteResponsesResponse.FromString,
                )
        self.ListResponses = channel.unary_unary(
                '/ondewo.nlu.Intents/ListResponses',
                request_serializer=ondewo_dot_nlu_dot_intent__pb2.ListResponsesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_intent__pb2.ListResponsesResponse.FromString,
                )


class IntentsServicer(object):
    """An intent represents a mapping between input from a user and an action to
    be taken by your application. When you pass user input to the
    [DetectIntent][google.cloud.dialogflow.v2.Sessions.DetectIntent] (or
    [StreamingDetectIntent][google.cloud.dialogflow.v2.Sessions.StreamingDetectIntent]) method, the
    Dialogflow API analyzes the input and searches
    for a matching intent. If no match is found, the Dialogflow API returns a
    fallback intent (`is_fallback` = true).

    You can provide additional information for the Dialogflow API to use to
    match user input to an intent by adding the following to your intent.

    *   **Contexts** - provide additional context for intent analysis. For
    example, if an intent is related to an object in your application that
    plays music, you can provide a context to determine when to match the
    intent if the user input is “turn it off”.  You can include a context
    that matches the intent when there is previous user input of
    "play music", and not when there is previous user input of
    "turn on the light".

    *   **Events** - allow for matching an intent by using an event name
    instead of user input. Your application can provide an event name and
    related parameters to the Dialogflow API to match an intent. For
    example, when your application starts, you can send a welcome event
    with a user name parameter to the Dialogflow API to match an intent with
    a personalized welcome message for the user.

    *   **Training phrases** - provide examples of user input to train the
    Dialogflow API agent to better match intents.

    For more information about intents, see the
    [Dialogflow documentation](https://dialogflow.com/docs/intents).
    """

    def ListIntents(self, request, context):
        """Returns the list of all intents in the specified agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIntent(self, request, context):
        """Retrieves the specified intent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIntent(self, request, context):
        """Creates an intent in the specified agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIntent(self, request, context):
        """Updates the specified intent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteIntent(self, request, context):
        """Deletes the specified intent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchUpdateIntents(self, request, context):
        """Updates/Creates multiple intents in the specified agent.

        Operation <response: [BatchUpdateIntentsResponse][google.cloud.dialogflow.v2.BatchUpdateIntentsResponse]>
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchDeleteIntents(self, request, context):
        """Deletes intents in the specified agent.

        Operation <response: [google.protobuf.Empty][google.protobuf.Empty]>
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateTrainingPhrases(self, request, context):
        """************************ Training Phrase RPC Endpoints ***************************

        Creates batch of training phrases
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetTrainingPhrases(self, request, context):
        """Retrieve a training phrases batch of the specified names.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchUpdateTrainingPhrases(self, request, context):
        """Updates batch of training phrases
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchDeleteTrainingPhrases(self, request, context):
        """Delete a training phrases batch of the specified names.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTrainingPhrases(self, request, context):
        """List training phrases (of a specific intent).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateResponses(self, request, context):
        """************************ Response RPC Endpoints ***************************

        Creates batch of intent messages
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetResponses(self, request, context):
        """Retrieve a intent messages batch of the specified names.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchUpdateResponses(self, request, context):
        """Updates batch of intent messages
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchDeleteResponses(self, request, context):
        """Delete a intent messages batch of the specified names.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResponses(self, request, context):
        """List messages (of a specific intent).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IntentsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListIntents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListIntents,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.ListIntentsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.ListIntentsResponse.SerializeToString,
            ),
            'GetIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIntent,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.GetIntentRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.Intent.SerializeToString,
            ),
            'CreateIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIntent,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.CreateIntentRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.Intent.SerializeToString,
            ),
            'UpdateIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIntent,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.UpdateIntentRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.Intent.SerializeToString,
            ),
            'DeleteIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteIntent,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.DeleteIntentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'BatchUpdateIntents': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchUpdateIntents,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchUpdateIntentsRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'BatchDeleteIntents': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchDeleteIntents,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteIntentsRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'BatchCreateTrainingPhrases': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateTrainingPhrases,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchCreateTrainingPhrasesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.SerializeToString,
            ),
            'BatchGetTrainingPhrases': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetTrainingPhrases,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchGetTrainingPhrasesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.SerializeToString,
            ),
            'BatchUpdateTrainingPhrases': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchUpdateTrainingPhrases,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchUpdateTrainingPhrasesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.SerializeToString,
            ),
            'BatchDeleteTrainingPhrases': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchDeleteTrainingPhrases,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteTrainingPhrasesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteTrainingPhrasesResponse.SerializeToString,
            ),
            'ListTrainingPhrases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTrainingPhrases,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.ListTrainingPhrasesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.ListTrainingPhrasesResponse.SerializeToString,
            ),
            'BatchCreateResponses': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateResponses,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchCreateResponsesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.SerializeToString,
            ),
            'BatchGetResponses': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetResponses,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchGetResponsesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.SerializeToString,
            ),
            'BatchUpdateResponses': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchUpdateResponses,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchUpdateResponsesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.SerializeToString,
            ),
            'BatchDeleteResponses': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchDeleteResponses,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteResponsesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.BatchDeleteResponsesResponse.SerializeToString,
            ),
            'ListResponses': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResponses,
                    request_deserializer=ondewo_dot_nlu_dot_intent__pb2.ListResponsesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_intent__pb2.ListResponsesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ondewo.nlu.Intents', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Intents(object):
    """An intent represents a mapping between input from a user and an action to
    be taken by your application. When you pass user input to the
    [DetectIntent][google.cloud.dialogflow.v2.Sessions.DetectIntent] (or
    [StreamingDetectIntent][google.cloud.dialogflow.v2.Sessions.StreamingDetectIntent]) method, the
    Dialogflow API analyzes the input and searches
    for a matching intent. If no match is found, the Dialogflow API returns a
    fallback intent (`is_fallback` = true).

    You can provide additional information for the Dialogflow API to use to
    match user input to an intent by adding the following to your intent.

    *   **Contexts** - provide additional context for intent analysis. For
    example, if an intent is related to an object in your application that
    plays music, you can provide a context to determine when to match the
    intent if the user input is “turn it off”.  You can include a context
    that matches the intent when there is previous user input of
    "play music", and not when there is previous user input of
    "turn on the light".

    *   **Events** - allow for matching an intent by using an event name
    instead of user input. Your application can provide an event name and
    related parameters to the Dialogflow API to match an intent. For
    example, when your application starts, you can send a welcome event
    with a user name parameter to the Dialogflow API to match an intent with
    a personalized welcome message for the user.

    *   **Training phrases** - provide examples of user input to train the
    Dialogflow API agent to better match intents.

    For more information about intents, see the
    [Dialogflow documentation](https://dialogflow.com/docs/intents).
    """

    @staticmethod
    def ListIntents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/ListIntents',
            ondewo_dot_nlu_dot_intent__pb2.ListIntentsRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.ListIntentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/GetIntent',
            ondewo_dot_nlu_dot_intent__pb2.GetIntentRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.Intent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/CreateIntent',
            ondewo_dot_nlu_dot_intent__pb2.CreateIntentRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.Intent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/UpdateIntent',
            ondewo_dot_nlu_dot_intent__pb2.UpdateIntentRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.Intent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/DeleteIntent',
            ondewo_dot_nlu_dot_intent__pb2.DeleteIntentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchUpdateIntents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchUpdateIntents',
            ondewo_dot_nlu_dot_intent__pb2.BatchUpdateIntentsRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchDeleteIntents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchDeleteIntents',
            ondewo_dot_nlu_dot_intent__pb2.BatchDeleteIntentsRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateTrainingPhrases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchCreateTrainingPhrases',
            ondewo_dot_nlu_dot_intent__pb2.BatchCreateTrainingPhrasesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetTrainingPhrases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchGetTrainingPhrases',
            ondewo_dot_nlu_dot_intent__pb2.BatchGetTrainingPhrasesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchUpdateTrainingPhrases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchUpdateTrainingPhrases',
            ondewo_dot_nlu_dot_intent__pb2.BatchUpdateTrainingPhrasesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.BatchTrainingPhrasesStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchDeleteTrainingPhrases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchDeleteTrainingPhrases',
            ondewo_dot_nlu_dot_intent__pb2.BatchDeleteTrainingPhrasesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.BatchDeleteTrainingPhrasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTrainingPhrases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/ListTrainingPhrases',
            ondewo_dot_nlu_dot_intent__pb2.ListTrainingPhrasesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.ListTrainingPhrasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateResponses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchCreateResponses',
            ondewo_dot_nlu_dot_intent__pb2.BatchCreateResponsesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetResponses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchGetResponses',
            ondewo_dot_nlu_dot_intent__pb2.BatchGetResponsesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchUpdateResponses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchUpdateResponses',
            ondewo_dot_nlu_dot_intent__pb2.BatchUpdateResponsesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.BatchResponsesStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchDeleteResponses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/BatchDeleteResponses',
            ondewo_dot_nlu_dot_intent__pb2.BatchDeleteResponsesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.BatchDeleteResponsesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListResponses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Intents/ListResponses',
            ondewo_dot_nlu_dot_intent__pb2.ListResponsesRequest.SerializeToString,
            ondewo_dot_nlu_dot_intent__pb2.ListResponsesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
